CCDxLib72を利用してAndroidビルドする方法

①入門サイトを見ながらcocosを入れる
  http://wiki.xsqi.net/index.php?%A5%D7%A5%ED%A5%B0%A5%E9%A5%E0%2FCocos2d-x%2FCocos2d-x%B3%AB%C8%AF%B4%C4%B6%AD%A4%CE%B9%BD%C3%DB
  このライブラリを利用するにはcocos2dx v3.8を利用してください。

②cocos のプロジェクトを作成する。
  ・cocos new -p com.samplegame -l cpp samplegame
    (AndroidのNDKやSDKのパスをセットしていれば、Eclipseを利用しなくて大丈夫です。)
  ・Classesフォルダにコードを追加
  ・Resourcesに画像や音楽ファイルを追加 (仮想ボタンとして使うButtonExample.pngもここに)
  ・ClassesフォルダにいれたコードをAndroidで読み込む設定をします。
    proj.android のjniのAndroid.mkで
	  LOCAL_SRC_FILES := hellocpp/main.cpp \
	                   ../../Classes/AppDelegate.cpp \
	                   ../../Classes/HelloWorldScene.cpp
    を
	  FILE_LIST := $(wildcard $(LOCAL_PATH)/../../Classes/*.cpp)
	  LOCAL_SRC_FILES := hellocpp/main.cpp
	  LOCAL_SRC_FILES += $(FILE_LIST:$(LOCAL_PATH)/%=%)                   
    へ、変更してください。

③コードを少しリファクタリング
    int WINAPI WinMain(HINSTANCE,HINSTANCE,LPSTR,int){
    	
    	SetWindowSize(800 , 600 );
    	ChangeWindowMode(TRUE);
    	DxLib_Init();
    	SetDrawScreen( DX_SCREEN_BACK );
    	
    	Awake();
    	
    	while( ScreenFlip()==0 && ProcessMessage()==0 && ClearDrawScreen()==0 ){
    		GameLoop();
    	}
    	
    	DxLib_End();
    	return 0;
    } 

  というロジックのコードを
    void AppDelegate::CCDxInit(){
    	SetGraphMode(WINDOW_WIDTH , WINDOW_HEIGHT);
    	ChangeWindowMode(TRUE);           
    	//タッチ操作でマウスの関数を反応できるように  
    	EMULATE_TOUCH_BY_MOUSEFUNCTIONS();
    }

    void CCDxStart(){
    	Awake();
    	//使用する仮想ボタンはここで宣言する
    	EMULATE_KEYBOARD_BY_IMAGINARY_BUTTON(KEY_INPUT_LEFT);
    	EMULATE_KEYBOARD_BY_IMAGINARY_BUTTON(KEY_INPUT_Z);
    }

    void CCDxLoop(float deltaTime){
    	ClearDrawScreen();
    	GameLoop();
    	if (CheckHitKey(KEY_INPUT_ESCAPE))DxLib_End();
    }

  に変更したら準備完了です！

④コンパイルします
  cocos compile -p android 

⑤これであなたのDxLibで書いたコードがAndroidでも動きます！

